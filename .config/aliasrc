# File: ~/.config/aliasrc

# Use nvim in place of vim
alias	vim="nvim"

# System commands
alias	mx="chmod a+x"

# Reload shell environment
alias	src="source ~/.zshrc; echo 'reloaded .zshrc'"

# Open notes
alias	n="$EDITOR ~/OneDrive/notes/index.md" \
		N="cs ~/OneDrive/notes" \
		v="$EDITOR ~/OneDrive/notes/viu/index.md" \
		V="cs ~/OneDrive/notes/viu"

# Directory shortcuts
alias	cb="cs ~/.local/bin" \
		cf="cs ~/.config" \
		ch="cs ~" \
		cl="cs ~/.local" \
		cg="cs ~/Github" \
		cw="cs ~/Github/samerickson.me"

# aliases for quickly editing frequently accessed configuration files
alias	cfb="$EDITOR ~/.bash_profile" \
		cfz="$EDITOR ~/.zshrc" \
		cfa="$EDITOR ~/.config/aliasrc" \
		cfv="$EDITOR ~/.config/nvim/init.vim" \
		cft="$EDITOR ~/.tmux.conf"

# Aliases for saving a few key presses off ls commands
alias 	ls="ls -G" \
		ll="ls -l" \
		la="ls -a" \
		llh="ls -lh" \
		lah="ls -lah" \

# Managing dotfiles / otherwise that is a lot of typting for routine file managment
alias	dotf="/usr/bin/git --git-dir=$HOME/.dotfiles --work-tree=$HOME" \
		dota="/usr/bin/git --git-dir=$HOME/.dotfiles --work-tree=$HOME add" \
		dots="/usr/bin/git --git-dir=$HOME/.dotfiles --work-tree=$HOME status -uno" \
		dotc="/usr/bin/git --git-dir=$HOME/.dotfiles --work-tree=$HOME commit " \
		dotcm="/usr/bin/git --git-dir=$HOME/.dotfiles --work-tree=$HOME commit -m" \
		dotb="/usr/bin/git --git-dir=$HOME/.dotfiles --work-tree=$HOME branch" \
		dotch="/usr/bin/git --git-dir=$HOME/.dotfiles --work-tree=$HOME checkout" \
		dotl="/usr/bin/git --git-dir=$HOME/.dotfiles --work-tree=$HOME log --oneline" \
		dotd="/usr/bin/git --git-dir=$HOME/.dotfiles --work-tree=$HOME diff"

# Saving a few key presses off frequently uses git commands
alias	gc="git commit -v" \
		gc!="git commit -v --amend " \
		gc="git checkout -b" \
		gcm="git commit -m" \
		gs="git status" \
		ga="git add" \
		gd="git diff" \
		gr="git remote" \
		gl="git log --oneline" \
		gp="git push"

# Making and deleting directories
alias	md="mkdir -p" \
		rd="rmdir"

# These ones are here just for fun
alias rr="curl -s -L https://raw.githubusercontent.com/keroserene/rickrollrc/master/roll.sh | bash"

# ------------
#	Functions:
# ------------

# Cd into a directory followed by ls
cs() { cd $1 && echo "$1" && ls; }

# Find and go to root directory of current git repository
gcd() { cd "$(git rev-parse --show-toplevel)"; }

# Display git commits in a pretty one line format
commitlist() { git log --pretty=format: %h - %an, %ar : %s; }

# List of the directories in the directory stack
#	you can go back to previous directory using popd
d() {
	[ -n $1] && dirs "$@" || dirs -v | head -10
}

# Backup a file or directory the lazy way
#	Useful for tinkering with config files, or temporarily changing code
back() {
	for var in "$@"; do
		cp -r "$var" "$var.backup"
		echo "Created backup of $var:	$var.backup"
	done
}

# If a ".backup" file exists, swap it with the file of the same name, otherwise
#	remove the .backup suffix
uback() {
	[ ! -f "$1.backup" ] && printf "File:\t$1.backup, not found.\n"
	[ -f "$1.backup" ] && [ -f "$1" ] && mv "$1" "$1.tmp" && mv "$1.backup" "$1" && mv "$1.tmp" "$1.backup" && \
		printf "Swapped $1.backup with $1"
	[ -f "$1.backup" ] && [ ! -f "$1" ] && mv "$1.backup" "$1" && \
		printf "Orriginal File not found restored from $1.backup"
}

# Moves all passed paramenters into the trash (located in ~/.Trash)
trash() {
    for var in "$@"; do
        printf "Moving '%s' to ~/.Trash\n" "$var"
        mv "$var" ~/.Trash
    done
}

